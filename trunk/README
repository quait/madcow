*** DESCRIPTION ***

Madcow is an extensible IRC/SILC/AIM bot written in Python. It is fully
customizable and has a simple API for creating modules that extend its
functionality. Madocw ships with modules that emulate classic Infobot behavior
and much more.


*** REQUIREMENTS ***

- python 2.4 or higher
- a DBM of some sort (such as BerkeleyDB)

madcow can use a variety of protocol formats.  Depending on which you choose,
you will need a third-party library to handle the protocol.  Most of these are
available from your operating systems's default package/ports handler.  If not,
the URL to their homepage is provided.

IRC  - python-irclib
SILC - silc-client & silc-toolkit
AIM  - twisted-words/im

madcow also comes with a suite of plugins that provide functionality.  Most
of them use the core Python library, however a few do not.  You can disable
these in the config or install the necessary tools.  The ones in this
distribution that have a library requirement are:

urban.py (look up definitions in Urban Dictionary): SOAPpy
memebot.py (url tracking): sqlobject, pysqlite



*** BASIC USAGE ***

Copy madcow.ini-sample to madcow.ini, edit options, and run:

$ ./madcow.py

When editing the config, you *must* choose which protocol to use.
By default IRC is enabled (as this is the most common use for chatterbots).
Please note that one instance of madcow can only support one protocol at a time.
The configuration for that module will be handled under the heading of the same
name.  So for example, if you wish to make this an AIM bot, make sure module=aim
in the [main] section, and edit the configurations in the [aim] section.

You can have multiple configuration files and specify them on the commandline.


>>>>>>>>>>>> DEVELOPERS <<<<<<<<<<<<<


*** WRITING EXTENSIONS ***

In the modules/ dir, copy template.py to your new module.
Edit the various options in the match() class and make the
response() function return desired output.  See existing modules
for example usage.


*** WRITING OUTPUT PLUGINS ***

Copy cli.py to your new output plugin.  Edit the various
functions to behave how you wish.  Add a section to madcow.ini
with the same name as your output extension and set module=(name)
in the [main] section to use it.

You *must* redefine the start() function at the very
minimum.  processMessage() is called with a callback function for
output() so that it can handle threading.  botName() can also be
over-ridden and is used for checking addressing in public enviorments
to cut down on spammy chatter from the bot.  See existing output
plugins (as of this writing, irc.py, aim.py, silcplugin.py and cli.py)
for example protocol extension classes.


*** OPEN ISSUES ***

This is a list of known bugs, requested features, and potential improvements.
Not everything here will necessarily be addressed. If you make any improvements
to the bot, feel free to share patches with me by emailing them to cjones@insub.org.

In no particular order..

FIXME: (blatant bugs, broken stuff)

- bible module still has some tags that make it through
- stockquote doesn't do mutual funds, weak regex

XXX: (known shortcomings)

- db files really need the option of giving them a namespace. right now any bots run
  from the same directory will share the same datafiles. while DB4 makes this *safe* to
  do, it's not very useful for having bots on different networks/channels.
- identify with nickserv in irc module
- channel or server passwords in irc module
- change urban/bbcnew/dictionary match syntax for defintion number. can't look up "area 52" e.g.
- add some verbosity. right now you don't know what's going on until it gets in channel
- grufti module *needs* boundary checking so substrings don't trigger
- factoids and grufti *always* trigger, which is annoying sometimes. when addressed they should always trigger,
  but when not addressed, only triggering n% of the time would be ideal. or not at all. should be configurable
- too many modules sitting in the include directory because they aren't getting enough metadata from the bot
  controller. this is a case of too much abstraction. modules should have access to this data whether they
  decide to use it or not. the only thing that should be in the include directory are third party tools and the
  util.py module that has helper functions
- documentation on individual modules is lacking. they should be explained so users can enable/disable them
  in config without being assaulted by potentially offensive or spammy stuff when deployed

TODO: (feature requests)

- ignore list for other bots that might get in a spam war
- authentication for remote admin functions
- priority on modules and/or short-circuiting to prevent match chaining spam
- ability to explicitly disable modules from config
- option to create a FIFO unix file that you can pipe to to fist madcow.. maybe
- chatroom support for aim/oscar module
- color support ported from insub.pl for higher levels of obnoxiousness
- memebot is missing some features from the original: ability to request a specific score, ability to ignore
  certain urls, the web backend (need to decide on django or turbogears..)
- consider some higher level admin duties such as auto-opping/kickban/etc. eggdrop module? would be nice to
  obsolete having multiple bots, although eggdrops are largely replaced by chanserv/nickserv
  


*** LICENSE ***

Copyright (C) 2007 Christopher Jones <cjones@insub.org>

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA

(see LICENSE for full details)


*** CONTRIBUTORS ***

This release has module contributions from the following people:

- toast: silcplugin, slutcheck
- twid: woot
- killfile: bbcnews

Additionally, Mark Pilgrim's rssparser.py is included in its unmodified form.
This is a convenience, as it is not present in many unix/linux package managers.
The author of madcow does not assume any credit or liability for this code,
and is merely redistributing it under the license provided (GPL) to make your life
easier.

Other third party tools are either too heavyweight to include with the bot or do
not allow redistribution.





*** general

- improve anti-abuse settings.. need to keep track of global module
  invocations and throttle people who spam the bot.  Right now, a malicious
  user can use the bot to DDOS various websites, burn all cpu/bandwidth on
  the machine, or just annoy people in general.

  * problem:  where to throttle?  we can only deign to care about what
    the user is doing *if* they trigger something, but this can happen
    inside of threads or serial code.  There's really no entirely safe
    global place to handle this....  hurr.

- make irc logging show both events and bots own output.
- support postgres!
- currently, various classes and functions madcow relies on are split
  haphazardly between madcow.py, include/utils.py, and include/gateway.py.
  Need to make more sense of this.  Perhaps move EVERYTHING but Madcow
  base class into a separate module?
- better testing framework, perhaps even proper unit testing.  Just testing
  that the various modules work is not enough anymore.  Too much stuff can
  break with small changes.
- history should do something fancier than dump the repr of the list
  traffic.py has issues when you enter grabage.. expected, but probably don't
  want unbound local error.
- lyrics module search should skip over artists pages if a song is later

*** style

- change re_ names to use _re at the end, for consistency.
- indentation line-up rules based on PEP8
- variable naming: many functions have camel casing for no good reason other
  than halfway through writing madcow I changed my preference for variable
  naming.  Need to go through and make this consistent, aka nuke camelCases.
- Line length:  another mid-write preference change.  Need to go through code
  and make it 80-column friendly as per PEP8.

*** SILC

- this module is pretty ghetto.. doesn't support everything that irc does
  for no good reason other than no one really cares, including me..

*** 2to3

- SQLObject is still using deprecated code.  Do we really need
  an object model for ONE small application, or would using raw
  SQL be acceptable just to remove a third-party dependency?  It would
  remove a few big headaches in one blow.  Because simplejson is going away,
  removing this would make nearly every module use the stdlib.
- twitter will need to use stdlib json instead of third-party
  simplejson.  Google may provide an update for this, but keep in mind that
  we've patched twitter.py in multiple ways already.

*** optimizations

- convert filter and map functions to use list comprehensions per psyco
  recommendation.
